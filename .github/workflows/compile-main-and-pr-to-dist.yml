name: Compile and Create PR to dist

on:
  # Trigger when a push occurs on main
  push:
    branches:
      - main

  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  compile-and-pr:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js (if required for building)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Step 3: Install dependencies and build the project
    - name: Install dependencies and build
      working-directory: ./web  # Ensure the build happens in the correct folder
      run: |
        npm install
        npm run build  # Build the project to dist folder

    # Step 4: Create or update the `update-dist` branch
    - name: Create or update update-dist branch
      working-directory: ./web  # Ensure the build happens in the correct folder
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Fetch the latest branches
        git fetch origin

        # Check if `update-dist` exists, and create or overwrite it
        if git rev-parse --verify origin/update-dist; then
          git switch update-dist
        else
          git switch -C update-dist
        fi

        # Overwrite the branch with compiled files
        rsync -a --delete ./dist/ ./  # Sync the compiled files
        git add .
        git commit -m "Update compiled files" || echo "No changes to commit"
        git push origin update-dist --force  # Overwrite remote branch

    # Step 5: Create a pull request from `update-dist` to `dist`
    - name: Create a pull request to dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if a PR already exists
        existing_pr=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          | jq -r '.[] | select(.head.ref == "update-dist" and .base.ref == "dist") | .number')

        if [ "$existing_pr" ]; then
          echo "PR already exists: $existing_pr"
        else
          # Create a new PR
          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{
              "title": "Update dist with compiled files",
              "body": "This PR contains the latest compiled files.",
              "head": "update-dist",
              "base": "dist"
            }'
        fi